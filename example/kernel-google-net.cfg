preset: "rocky8"
package: "BaseOS//kernel"

apply_patch {
  custom {
    disable_auto_align: true
    search_and_replace {
      any: true
      find: "ApplyOptionalPatch linux-kernel-test.patch"
      replace: "ApplyOptionalPatch linux-kernel-test.patch\nApplyPatch %%patch_name%%"
      n: 1
    }
  }
}

upstream {
  git: "https://kernel.googlesource.com/pub/scm/linux/kernel/git/torvalds/linux"
  depth: 1
  tag: "v6.5"
  compare_with_tag: {
    value: "v4.18"
  }
  compare_should_use_osfs: true
  compare_mode: KernelTag
}

changes {
  recursive_path: "drivers/net/ethernet/google"

  file_change {
    path: "drivers/net/ethernet/google/Kconfig"

    search_replace {
      find: "depends on (PCI_MSI && (X86 || CPU_LITTLE_ENDIAN))"
      replace: "depends on PCI_MSI"
      n: 1
    }
  }

  file_change {
    path: "drivers/net/ethernet/google/gve/gve_main.c"

    search_replace {
      find: "LINUX_VERSION_MAJOR"
      replace: "6"
      n: -1
    }

    search_replace {
      find: "LINUX_VERSION_SUBLEVEL"
      replace: "2"
      n: -1
    }

    search_replace {
      find: "LINUX_VERSION_PATCHLEVEL"
      replace: "0"
      n: -1
    }

    # This is allowed to do according to the gVNIC Coccinelle patches
    # https://github.com/GoogleCloudPlatform/compute-virtual-ethernet-linux/blob/main/patches/patch_xdp1.cocci#L302
    # todo(mustafa): evaluate using Coccinelle for Sideline as this is unbearable
    search_replace {
      find: "static void gve_set_netdev_xdp_features(struct gve_priv *priv)\n{\n\tif (priv->queue_format == GVE_GQI_QPL_FORMAT) {\n\t\tpriv->dev->xdp_features = NETDEV_XDP_ACT_BASIC;\n\t\tpriv->dev->xdp_features |= NETDEV_XDP_ACT_REDIRECT;\n\t\tpriv->dev->xdp_features |= NETDEV_XDP_ACT_NDO_XMIT;\n\t\tpriv->dev->xdp_features |= NETDEV_XDP_ACT_XSK_ZEROCOPY;\n\t} else {\n\t\tpriv->dev->xdp_features = 0;\n\t}\n}"
      replace: "static void gve_set_netdev_xdp_features(struct gve_priv *priv)\n{\n\treturn;\n}"
      n: -1
    }
  }

  file_change {
    path: "drivers/net/ethernet/google/gve/gve_tx.c"

    search_replace {
      find: "vcalloc(slots, sizeof(*tx->info));"
      replace: "vzalloc(sizeof(*tx->info) * slots);"
      n: -1
    }
  }

  file_change {
    path: "drivers/net/ethernet/google/gve/gve_tx_dqo.c"

    search_replace {
      find: "skb_tcp_all_headers(skb);"
      replace: "skb_transport_offset(skb) + tcp_hdrlen(skb);"
      n: -1
    }

    # https://github.com/GoogleCloudPlatform/compute-virtual-ethernet-linux/blob/c4a2d49f711edc65bdc76798717440d9e32a054c/patches/ipv6_hopopt_jumbo_remove.cocci#L15
    search_replace {
      find: "\t\tif (unlikely(ipv6_hopopt_jumbo_remove(skb)))\n\t\t\tgoto drop;\n"
      replace: ""
      n: -1
    }
  }
}
